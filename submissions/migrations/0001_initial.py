# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-07-27 07:45
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, verbose_name='Original title')),
                ('title_en', models.CharField(max_length=1000, verbose_name='English title')),
                ('country', models.CharField(choices=[(b'AD', 'Andorra'), (b'AE', 'United Arab Emirates'), (b'AF', 'Afghanistan'), (b'AG', 'Antigua & Barbuda'), (b'AI', 'Anguilla'), (b'AL', 'Albania'), (b'AM', 'Armenia'), (b'AN', 'Netherlands Antilles'), (b'AO', 'Angola'), (b'AQ', 'Antarctica'), (b'AR', 'Argentina'), (b'AS', 'American Samoa'), (b'AT', 'Austria'), (b'AU', 'Australia'), (b'AW', 'Aruba'), (b'AZ', 'Azerbaijan'), (b'BA', 'Bosnia and Herzegovina'), (b'BB', 'Barbados'), (b'BD', 'Bangladesh'), (b'BE', 'Belgium'), (b'BF', 'Burkina Faso'), (b'BG', 'Bulgaria'), (b'BH', 'Bahrain'), (b'BI', 'Burundi'), (b'BJ', 'Benin'), (b'BM', 'Bermuda'), (b'BN', 'Brunei Darussalam'), (b'BO', 'Bolivia'), (b'BR', 'Brazil'), (b'BS', 'Bahama'), (b'BT', 'Bhutan'), (b'BV', 'Bouvet Island'), (b'BW', 'Botswana'), (b'BY', 'Belarus'), (b'BZ', 'Belize'), (b'CA', 'Canada'), (b'CC', 'Cocos (Keeling) Islands'), (b'CF', 'Central African Republic'), (b'CG', 'Congo'), (b'CH', 'Switzerland'), (b'CI', 'Ivory Coast'), (b'CK', 'Cook Iislands'), (b'CL', 'Chile'), (b'CM', 'Cameroon'), (b'CN', 'China'), (b'CO', 'Colombia'), (b'CR', 'Costa Rica'), (b'CU', 'Cuba'), (b'CV', 'Cape Verde'), (b'CX', 'Christmas Island'), (b'CY', 'Cyprus'), (b'CZ', 'Czech Republic'), (b'DE', 'Germany'), (b'DJ', 'Djibouti'), (b'DK', 'Denmark'), (b'DM', 'Dominica'), (b'DO', 'Dominican Republic'), (b'DZ', 'Algeria'), (b'EC', 'Ecuador'), (b'EE', 'Estonia'), (b'EG', 'Egypt'), (b'EH', 'Western Sahara'), (b'ER', 'Eritrea'), (b'ES', 'Spain'), (b'ET', 'Ethiopia'), (b'FI', 'Finland'), (b'FJ', 'Fiji'), (b'FK', 'Falkland Islands (Malvinas)'), (b'FM', 'Micronesia'), (b'FO', 'Faroe Islands'), (b'FR', 'France'), (b'FX', 'France, Metropolitan'), (b'GA', 'Gabon'), (b'GB', 'United Kingdom (Great Britain)'), (b'GD', 'Grenada'), (b'GE', 'Georgia'), (b'GF', 'French Guiana'), (b'GH', 'Ghana'), (b'GI', 'Gibraltar'), (b'GL', 'Greenland'), (b'GM', 'Gambia'), (b'GN', 'Guinea'), (b'GP', 'Guadeloupe'), (b'GQ', 'Equatorial Guinea'), (b'GR', 'Greece'), (b'GS', 'South Georgia and the South Sandwich Islands'), (b'GT', 'Guatemala'), (b'GU', 'Guam'), (b'GW', 'Guinea-Bissau'), (b'GY', 'Guyana'), (b'HK', 'Hong Kong'), (b'HM', 'Heard & McDonald Islands'), (b'HN', 'Honduras'), (b'HR', 'Croatia'), (b'HT', 'Haiti'), (b'HU', 'Hungary'), (b'ID', 'Indonesia'), (b'IE', 'Ireland'), (b'IL', 'Israel'), (b'IN', 'India'), (b'IO', 'British Indian Ocean Territory'), (b'IQ', 'Iraq'), (b'IR', 'Islamic Republic of Iran'), (b'IS', 'Iceland'), (b'IT', 'Italy'), (b'JM', 'Jamaica'), (b'JO', 'Jordan'), (b'JP', 'Japan'), (b'KE', 'Kenya'), (b'KG', 'Kyrgyzstan'), (b'KH', 'Cambodia'), (b'KI', 'Kiribati'), (b'KM', 'Comoros'), (b'KN', 'St. Kitts and Nevis'), (b'KP', "Korea, Democratic People's Republic of"), (b'KR', 'Korea, Republic of'), (b'KW', 'Kuwait'), (b'KY', 'Cayman Islands'), (b'KZ', 'Kazakhstan'), (b'LA', "Lao People's Democratic Republic"), (b'LB', 'Lebanon'), (b'LC', 'Saint Lucia'), (b'LI', 'Liechtenstein'), (b'LK', 'Sri Lanka'), (b'LR', 'Liberia'), (b'LS', 'Lesotho'), (b'LT', 'Lithuania'), (b'LU', 'Luxembourg'), (b'LV', 'Latvia'), (b'LY', 'Libyan Arab Jamahiriya'), (b'MA', 'Morocco'), (b'MC', 'Monaco'), (b'MD', 'Moldova, Republic of'), (b'MG', 'Madagascar'), (b'MH', 'Marshall Islands'), (b'ML', 'Mali'), (b'MN', 'Mongolia'), (b'MM', 'Myanmar'), (b'MO', 'Macau'), (b'MP', 'Northern Mariana Islands'), (b'MQ', 'Martinique'), (b'MR', 'Mauritania'), (b'MS', 'Monserrat'), (b'MT', 'Malta'), (b'MU', 'Mauritius'), (b'MV', 'Maldives'), (b'MW', 'Malawi'), (b'MX', 'Mexico'), (b'MY', 'Malaysia'), (b'MZ', 'Mozambique'), (b'NA', 'Namibia'), (b'NC', 'New Caledonia'), (b'NE', 'Niger'), (b'NF', 'Norfolk Island'), (b'NG', 'Nigeria'), (b'NI', 'Nicaragua'), (b'NL', 'Netherlands'), (b'NO', 'Norway'), (b'NP', 'Nepal'), (b'NR', 'Nauru'), (b'NU', 'Niue'), (b'NZ', 'New Zealand'), (b'OM', 'Oman'), (b'PA', 'Panama'), (b'PE', 'Peru'), (b'PF', 'French Polynesia'), (b'PG', 'Papua New Guinea'), (b'PH', 'Philippines'), (b'PK', 'Pakistan'), (b'PL', 'Poland'), (b'PM', 'St. Pierre & Miquelon'), (b'PN', 'Pitcairn'), (b'PR', 'Puerto Rico'), (b'PT', 'Portugal'), (b'PW', 'Palau'), (b'PY', 'Paraguay'), (b'QA', 'Qatar'), (b'RE', 'Reunion'), (b'RO', 'Romania'), (b'RU', 'Russian Federation'), (b'RW', 'Rwanda'), (b'SA', 'Saudi Arabia'), (b'SB', 'Solomon Islands'), (b'SC', 'Seychelles'), (b'SD', 'Sudan'), (b'SE', 'Sweden'), (b'SG', 'Singapore'), (b'SH', 'St. Helena'), (b'SI', 'Slovenia'), (b'SJ', 'Svalbard & Jan Mayen Islands'), (b'SK', 'Slovakia'), (b'SL', 'Sierra Leone'), (b'SM', 'San Marino'), (b'SN', 'Senegal'), (b'SO', 'Somalia'), (b'SR', 'Suriname'), (b'ST', 'Sao Tome & Principe'), (b'SV', 'El Salvador'), (b'SY', 'Syrian Arab Republic'), (b'SZ', 'Swaziland'), (b'TC', 'Turks & Caicos Islands'), (b'TD', 'Chad'), (b'TF', 'French Southern Territories'), (b'TG', 'Togo'), (b'TH', 'Thailand'), (b'TJ', 'Tajikistan'), (b'TK', 'Tokelau'), (b'TM', 'Turkmenistan'), (b'TN', 'Tunisia'), (b'TO', 'Tonga'), (b'TP', 'East Timor'), (b'TR', 'Turkey'), (b'TT', 'Trinidad & Tobago'), (b'TV', 'Tuvalu'), (b'TW', 'Taiwan, Province of China'), (b'TZ', 'Tanzania, United Republic of'), (b'UA', 'Ukraine'), (b'UG', 'Uganda'), (b'UM', 'United States Minor Outlying Islands'), (b'US', 'United States of America'), (b'UY', 'Uruguay'), (b'UZ', 'Uzbekistan'), (b'VA', 'Vatican City State (Holy See)'), (b'VC', 'St. Vincent & the Grenadines'), (b'VE', 'Venezuela'), (b'VG', 'British Virgin Islands'), (b'VI', 'United States Virgin Islands'), (b'VN', 'Viet Nam'), (b'VU', 'Vanuatu'), (b'WF', 'Wallis & Futuna Islands'), (b'WS', 'Samoa'), (b'YE', 'Yemen'), (b'YT', 'Mayotte'), (b'YU', 'Yugoslavia'), (b'ZA', 'South Africa'), (b'ZM', 'Zambia'), (b'ZR', 'Zaire'), (b'ZW', 'Zimbabwe'), (b'ZZ', 'Other')], max_length=2, verbose_name='Country of production')),
                ('language', models.CharField(choices=[('ab', 'Abkhazian'), ('aa', 'Afar'), ('af', 'Afrikaans'), ('ak', 'Akan'), ('sq', 'Albanian'), ('am', 'Amharic'), ('ar', 'Arabic'), ('an', 'Aragonese'), ('hy', 'Armenian'), ('as', 'Assamese'), ('av', 'Avaric'), ('ae', 'Avestan'), ('ay', 'Aymara'), ('az', 'Azerbaijani'), ('bm', 'Bambara'), ('ba', 'Bashkir'), ('eu', 'Basque'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('bh', 'Bihari languages'), ('bi', 'Bislama'), ('nb', 'Bokm\xe5l, Norwegian; Norwegian Bokm\xe5l'), ('bs', 'Bosnian'), ('br', 'Breton'), ('bg', 'Bulgarian'), ('my', 'Burmese'), ('ca', 'Catalan; Valencian'), ('km', 'Central Khmer'), ('ch', 'Chamorro'), ('ce', 'Chechen'), ('ny', 'Chichewa; Chewa; Nyanja'), ('zh', 'Chinese'), ('cu', 'Church Slavic; Old Slavonic; Church Slavonic; Old Bulgarian; Old Church Slavonic'), ('cv', 'Chuvash'), ('kw', 'Cornish'), ('co', 'Corsican'), ('cr', 'Cree'), ('hr', 'Croatian'), ('cs', 'Czech'), ('da', 'Danish'), ('dv', 'Divehi; Dhivehi; Maldivian'), ('nl', 'Dutch; Flemish'), ('dz', 'Dzongkha'), ('en', 'English'), ('eo', 'Esperanto'), ('et', 'Estonian'), ('ee', 'Ewe'), ('fo', 'Faroese'), ('fj', 'Fijian'), ('fi', 'Finnish'), ('fr', 'French'), ('ff', 'Fulah'), ('gd', 'Gaelic; Scottish Gaelic'), ('gl', 'Galician'), ('lg', 'Ganda'), ('ka', 'Georgian'), ('de', 'German'), ('el', 'Greek, Modern (1453-)'), ('gn', 'Guarani'), ('gu', 'Gujarati'), ('ht', 'Haitian; Haitian Creole'), ('ha', 'Hausa'), ('he', 'Hebrew'), ('hz', 'Herero'), ('hi', 'Hindi'), ('ho', 'Hiri Motu'), ('hu', 'Hungarian'), ('is', 'Icelandic'), ('io', 'Ido'), ('ig', 'Igbo'), ('id', 'Indonesian'), ('ia', 'Interlingua (International Auxiliary Language Association)'), ('ie', 'Interlingue; Occidental'), ('iu', 'Inuktitut'), ('ik', 'Inupiaq'), ('ga', 'Irish'), ('it', 'Italian'), ('ja', 'Japanese'), ('jv', 'Javanese'), ('kl', 'Kalaallisut; Greenlandic'), ('kn', 'Kannada'), ('kr', 'Kanuri'), ('ks', 'Kashmiri'), ('kk', 'Kazakh'), ('ki', 'Kikuyu; Gikuyu'), ('rw', 'Kinyarwanda'), ('ky', 'Kirghiz; Kyrgyz'), ('kv', 'Komi'), ('kg', 'Kongo'), ('ko', 'Korean'), ('kj', 'Kuanyama; Kwanyama'), ('ku', 'Kurdish'), ('lo', 'Lao'), ('la', 'Latin'), ('lv', 'Latvian'), ('li', 'Limburgan; Limburger; Limburgish'), ('ln', 'Lingala'), ('lt', 'Lithuanian'), ('lu', 'Luba-Katanga'), ('lb', 'Luxembourgish; Letzeburgesch'), ('mk', 'Macedonian'), ('mg', 'Malagasy'), ('ms', 'Malay'), ('ml', 'Malayalam'), ('mt', 'Maltese'), ('gv', 'Manx'), ('mi', 'Maori'), ('mr', 'Marathi'), ('mh', 'Marshallese'), ('mo', 'Moldavian; Moldovan'), ('mn', 'Mongolian'), ('na', 'Nauru'), ('nv', 'Navajo; Navaho'), ('nd', 'Ndebele, North; North Ndebele'), ('nr', 'Ndebele, South; South Ndebele'), ('ng', 'Ndonga'), ('ne', 'Nepali'), ('se', 'Northern Sami'), ('no', 'Norwegian'), ('nn', 'Norwegian Nynorsk; Nynorsk, Norwegian'), ('oc', 'Occitan (post 1500)'), ('oj', 'Ojibwa'), ('or', 'Oriya'), ('om', 'Oromo'), ('os', 'Ossetian; Ossetic'), ('pi', 'Pali'), ('pa', 'Panjabi; Punjabi'), ('fa', 'Persian'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('ps', 'Pushto; Pashto'), ('qu', 'Quechua'), ('ro', 'Romanian'), ('rm', 'Romansh'), ('rn', 'Rundi'), ('ru', 'Russian'), ('sm', 'Samoan'), ('sg', 'Sango'), ('sa', 'Sanskrit'), ('sc', 'Sardinian'), ('sr', 'Serbian'), ('sn', 'Shona'), ('ii', 'Sichuan Yi; Nuosu'), ('sd', 'Sindhi'), ('si', 'Sinhala; Sinhalese'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('so', 'Somali'), ('st', 'Sotho, Southern'), ('es', 'Spanish; Castilian'), ('su', 'Sundanese'), ('sw', 'Swahili'), ('ss', 'Swati'), ('sv', 'Swedish'), ('tl', 'Tagalog'), ('ty', 'Tahitian'), ('tg', 'Tajik'), ('ta', 'Tamil'), ('tt', 'Tatar'), ('te', 'Telugu'), ('th', 'Thai'), ('bo', 'Tibetan'), ('ti', 'Tigrinya'), ('to', 'Tonga (Tonga Islands)'), ('ts', 'Tsonga'), ('tn', 'Tswana'), ('tr', 'Turkish'), ('tk', 'Turkmen'), ('tw', 'Twi'), ('ug', 'Uighur; Uyghur'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('uz', 'Uzbek'), ('ve', 'Venda'), ('vi', 'Vietnamese'), ('vo', 'Volap\xfck'), ('wa', 'Walloon'), ('cy', 'Welsh'), ('fy', 'Western Frisian'), ('wo', 'Wolof'), ('xh', 'Xhosa'), ('yi', 'Yiddish'), ('yo', 'Yoruba'), ('za', 'Zhuang; Chuang'), ('zu', 'Zulu')], max_length=10, verbose_name='Language of original version')),
                ('genre', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Genre')),
                ('section', models.IntegerField(choices=[(1, 'Fiction'), (2, 'Animation'), (3, 'Documentary'), (4, 'Experimental')], verbose_name='Section')),
                ('synopsis', models.TextField(verbose_name='Synopsis')),
                ('length', models.IntegerField(verbose_name='Runtime (in minutes)')),
                ('aspect_ratio', models.CharField(max_length=1000, verbose_name='Aspect ratio')),
                ('year', models.IntegerField(verbose_name='Year of production')),
                ('premiere', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')], verbose_name='Premiere')),
                ('film_awards', models.TextField(blank=True, verbose_name='Film awards')),
                ('director_awards', models.TextField(blank=True, verbose_name='Director awards')),
                ('budget', models.CharField(max_length=1000, verbose_name='Film budget')),
                ('film_link', models.CharField(blank=True, help_text='DVD, MPEG, MP4 or MOV', max_length=1000, verbose_name='Link to download the film (optional)')),
                ('film_link_pwd', models.CharField(blank=True, max_length=1000, verbose_name='Password for the link above (optional)')),
                ('attend', models.IntegerField(choices=[(0, 'Maybe'), (1, 'Yes'), (2, 'No')], default=0, verbose_name='I intend to visit final part of festival')),
                ('backlink', models.IntegerField(choices=[(1, 'festival website'), (2, 'Facebook'), (3, 'Twitter'), (4, 'vk.com'), (5, 'email'), (6, 'internet search'), (7, 'friends'), (8, 'festivals database'), (9, "I participated in CPM'2012"), (10, 'place of study'), (11, 'work'), (12, 'other')], verbose_name='The source of information about Cinema Perpetuum Mobile')),
                ('director', models.CharField(max_length=1000, verbose_name='Name')),
                ('director_address', models.TextField(verbose_name='Address')),
                ('director_email', models.CharField(max_length=1000, verbose_name='Email')),
                ('director_site', models.CharField(blank=True, max_length=1000, verbose_name='Website')),
                ('director_phone', models.CharField(blank=True, max_length=1000, verbose_name='Tel.')),
                ('producer', models.CharField(blank=True, max_length=1000, verbose_name='Name')),
                ('producer_address', models.TextField(blank=True, verbose_name='Address')),
                ('producer_email', models.CharField(blank=True, max_length=1000, verbose_name='Email')),
                ('producer_site', models.CharField(blank=True, max_length=1000, verbose_name='Website')),
                ('producer_phone', models.CharField(blank=True, max_length=1000, verbose_name='Tel.')),
                ('screenwriter', models.CharField(blank=True, max_length=1000, verbose_name='Script writer')),
                ('editor', models.CharField(blank=True, max_length=1000, verbose_name='Editor')),
                ('music', models.CharField(blank=True, max_length=1000, verbose_name='Music composer')),
                ('director_photography', models.CharField(blank=True, max_length=1000, verbose_name='Director of photography')),
                ('other_credits', models.TextField(blank=True, verbose_name='Other credits')),
                ('allow_tv', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')], default=1, verbose_name='Authorization to use excerpts of the film for promotion (max 10% of the total length) in television')),
                ('allow_noncommercial', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')], default=1, verbose_name='Authorization to include the film in the festival video collection for non-commercial screenings')),
                ('allow_network', models.IntegerField(choices=[(1, 'Yes'), (2, 'No')], default=1, verbose_name='Authorization to screen the film at film festivals from Cinema Perpetuum Mobile partner network')),
                ('applicant', models.CharField(max_length=1000, verbose_name='Name')),
                ('applicant_address', models.TextField(verbose_name='Address')),
                ('applicant_email', models.CharField(max_length=1000, verbose_name='Email')),
                ('applicant_site', models.CharField(blank=True, max_length=1000, verbose_name='Website')),
                ('applicant_phone', models.CharField(blank=True, max_length=1000, verbose_name='Tel.')),
                ('submission_language', models.CharField(choices=[(b'en', 'English'), (b'be', '\u0411\u0435\u043b\u0430\u0440\u0443\u0441\u043a\u0430\u044f'), (b'ru', '\u0420\u0443\u0441\u0441\u043a\u0438\u0439')], default=b'en', max_length=2, verbose_name='Submission language')),
                ('extra_data', models.TextField(blank=True, null=True, verbose_name='Structured data')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('comment_email_sent', models.BooleanField(default=False, verbose_name='E-mail was sent')),
                ('comment_film_received', models.BooleanField(default=False, verbose_name='Film is received')),
                ('comment_papers_received', models.BooleanField(default=False, verbose_name='Papers were received')),
                ('comment_vob_received', models.BooleanField(default=False, verbose_name='Vob received')),
                ('submitted_at', models.DateTimeField(auto_now_add=True, verbose_name='Submitted at')),
                ('email_sent_at', models.DateTimeField(blank=True, null=True, verbose_name='E-mail sent at')),
                ('film_received_at', models.DateTimeField(blank=True, null=True, verbose_name='Film received at')),
                ('papers_received_at', models.DateTimeField(blank=True, null=True, verbose_name='Papers received at')),
                ('vob_received_at', models.DateTimeField(blank=True, null=True, verbose_name='Vob received at')),
                ('preview', models.FloatField(blank=True, null=True, verbose_name='Preview result')),
                ('preview_average', models.FloatField(blank=True, null=True, verbose_name='Preview average result')),
                ('previewers', models.IntegerField(blank=True, null=True, verbose_name='Previewers count')),
            ],
        ),
    ]
